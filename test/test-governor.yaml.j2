---
apiVersion: anarchy.gpte.redhat.com/v1
kind: AnarchyGovernor
metadata:
  name: {{ anarchy_governor_name }}
  namespace: {{ anarchy_operator_namespace | to_json }}
{% raw %}
spec:
  api: test

  parameters:
    cloud_provider: ec2
    check_late_variable_binding: "{{ this_variable_not_defined }}"

  parameterSecrets:
  - name: test-aws-creds

  vars:
    tower_organization: test

  subjectEventHandlers:
  - event: create
    tasks:
    - name: Set state provision-scheduled in subject status
      anarchy_subject_update:
        metadata:
          labels:
            state: provision-scheduled
        status:
          state: provision-scheduled
    - name: Start Provision
      anarchy_schedule_action:
        action: provision

  - event: update
    tasks:
    - when: >-
        anarchy_subject.spec.desiredState|default('') == 'started' and
        (anarchy_subject.status|default({})).state|default('') == 'stopped'
      block:
      - name: Set state start-scheduled in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: start-scheduled
          status:
            state: start-scheduled
      - name: Schedule start
        anarchy_schedule_action:
          action: start
    - when: >-
        anarchy_subject.spec.desiredState|default('') == 'stopped' and
        (anarchy_subject.status|default({})).state|default('') == 'started'
      block:
      - name: Set state stop-scheduled in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: stop-scheduled
          status:
            state: stop-scheduled
      - name: Schedule stop
        anarchy_schedule_action:
          action: stop

  - event: delete
    tasks:
    - name: Schedule destroy
      anarchy_schedule_action:
        action: destroy

  actions:
  - name: provision
    request:
      parameters:
        ACTION: provision
    vars:
      deployer_entry_point: ansible/main.yml
    eventHandlers:
    - event: started
      tasks:
      - name: Set state provisioning in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: provisioning
          status:
            state: provisioning
    - event: complete
      tasks:
      - name: Set state started in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: started
          status:
            state: started
      - name: Schedule stop
        anarchy_schedule_action:
          action: stop
          after: 8h
      - name: Schedule destroy
        anarchy_schedule_action:
          action: destroy
          after: 6d

  - name: stop
    request:
      parameters:
        ACTION: stop
    vars:
      deployer_entry_point: ansible/lifecycle.yml
    eventHandlers:
    - event: started
      tasks:
      - name: Set state stopping in subject status
        anarchy_subject_update:
          spec:
            desiredState: stopped
          metadata:
            labels:
              state: stopping
          status:
            state: stopping
      - name: Update desiredState stopped in subject resource handle
        when: >-
          'poolboy.gpte.redhat.com/resource-handle-name' in anarchy_subject.metadata.annotations and
          'poolboy.gpte.redhat.com/resource-handle-namespace' in anarchy_subject.metadata.annotations
        vars:
          resource_index: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-index'] | default(0) }}
        k8s:
          api_version: poolboy.gpte.redhat.com/v1
          kind: ResourceHandle
          name: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-handle-name'] }}
          namespace: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-handle-namespace'] }}
          merge_type: json
          definition:
          - op: replace
            path: /spec/resources/{{ resource_index }}/template/spec/desiredState
            value: stopped
      - name: Update desiredState stopped in subject resource claim
        when: >-
          'poolboy.gpte.redhat.com/resource-claim-name' in anarchy_subject.metadata.annotations and
          'poolboy.gpte.redhat.com/resource-claim-namespace' in anarchy_subject.metadata.annotations
        vars:
          resource_index: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-index'] | default(0) }}
        k8s:
          api_version: poolboy.gpte.redhat.com/v1
          kind: ResourceClaim
          name: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-claim-name'] }}
          namespace: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-claim-namespace'] }}
          merge_type: json
          definition:
          - op: replace
            path: /spec/resources/{{ resource_index }}/template/spec/desiredState
            value: stopped
    - event: complete
      tasks:
      - name: Set state stopped in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: stopped
          status:
            state: stopped

  - name: start
    request:
      parameters:
        ACTION: start
    vars:
      deployer_entry_point: ansible/lifecycle.yml
    eventHandlers:
    - event: started
      tasks:
      - name: Set state starting in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: starting
          status:
            state: starting
    - event: complete
      tasks:
      - name: Set state started in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: started
          status:
            state: started
      - name: Schedule stop
        anarchy_schedule_action:
          action: stop
          after: 8h

  - name: destroy
    request:
      parameters:
        ACTION: destroy
    vars:
      deployer_entry_point: ansible/destroy.yml
    eventHandlers:
    - event: complete
      tasks:
      - name: Delete anarchy subject
        anarchy_subject_delete:
          remove_finalizers: true
      - name: Delete resource handle
        when: >-
          'poolboy.gpte.redhat.com/resource-handle-name' in anarchy_subject.metadata.annotations and
          'poolboy.gpte.redhat.com/resource-handle-namespace' in anarchy_subject.metadata.annotations
        k8s:
          api_version: poolboy.gpte.redhat.com/v1
          kind: ResourceHandle
          name: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-handle-name'] }}
          namespace: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-handle-namespace'] }}
          state: absent
      - name: Delete resource claim
        when: >-
          'poolboy.gpte.redhat.com/resource-claim-name' in anarchy_subject.metadata.annotations and
          'poolboy.gpte.redhat.com/resource-claim-namespace' in anarchy_subject.metadata.annotations
        k8s:
          api_version: poolboy.gpte.redhat.com/v1
          kind: ResourceClaim
          name: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-claim-name'] }}
          namespace: >-
            {{ anarchy_subject.metadata.annotations['poolboy.gpte.redhat.com/resource-claim-namespace'] }}
          state: absent
{% endraw %}
