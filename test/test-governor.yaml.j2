---
apiVersion: gpte.redhat.com/v1
kind: AnarchyGovernor
metadata:
  name: {{ anarchy_governor_name }}
  namespace: {{ anarchy_operator_namespace | to_json }}
{% raw %}
spec:
  api: test

  parameters:
    cloud_provider: ec2
    aws_access_key_id:
      secretName: test-aws-creds
      secretKey: aws_access_key_id
    aws_secret_access_key:
      secretName: test-aws-creds
      secretKey: aws_secret_access_key

  deleteFinalizerCondition:
    check: status.state
    value: destroyed

  subjectEventHandlers:
  - event: add
    tasks:
    - name: Set state provision-scheduled in subject status
      anarchy_subject_update:
        metadata:
          labels:
            state: provision-scheduled
        status:
          state: provision-scheduled
    - name: Start Provision
      anarchy_schedule_action:
        action: provision

  - event: update
    tasks:
    - when: >-
        anarchy_subject.spec.desiredState|default('') == 'started' and
        (anarchy_subject.status|default({})).state|default('') == 'stopped'
      block:
      - name: Set state start-scheduled in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: start-scheduled
          status:
            state: start-scheduled
      - name: Schedule start
        anarchy_schedule_action:
          action: start
    - when: >-
        anarchy_subject.spec.desiredState|default('stopped') == 'stopped' and
        (anarchy_subject.status|default({})).state|default('') == 'started'
      block:
      - name: Set state stop-scheduled in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: stop-scheduled
          status:
            state: stop-scheduled
      - name: Schedule stop
        anarchy_schedule_action:
          action: stop

  - event: delete
    tasks:
    - name: Schedule destroy
      anarchy_schedule_action:
        action: destroy

  actions:
  - name: provision
    request:
      parameters:
        ACTION: provision
    eventHandlers:
    - event: started
      tasks:
      - name: Set state provisioning in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: provisioning
          status:
            state: provisioning
    - event: complete
      tasks:
      - name: Set state started in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: started
          status:
            state: started
      - name: Schedule stop
        anarchy_schedule_action:
          action: stop
          after: 8h
      - name: Schedule destroy
        anarchy_schedule_action:
          action: destroy
          after: 6d

  - name: stop
    request:
      parameters:
        ACTION: stop
    eventHandlers:
    - event: started
      tasks:
      - name: Set state stopping in subject status
        anarchy_subject_update:
          spec:
            desiredState: stopped
          metadata:
            labels:
              state: stopping
          status:
            state: stopping
      - name: Update desiredState stopped in subject resource handle
        when: >-
          'gpte.redhat.com/resource-handle-name' in subject.metadata.annotations and
          'gpte.redhat.com/resource-handle-namespace' in subject.metadata.annotations
        k8s:
          api_version: gpte.redhat.com/v1
          kind: ResourceHandle
          name: >-
            {{ subject.metadata.annotations['gpte.redhat.com/resource-handle-name'] }}
          namespace: >-
            {{ subject.metadata.annotations['gpte.redhat.com/resource-handle-namespace'] }}
          merge_type: merge
          definition:
            spec:
              template:
                spec:
                  desiredState: stopped
      - name: Update desiredState stopped in subject resource claim
        when: >-
          'gpte.redhat.com/resource-claim-name' in subject.metadata.annotations and
          'gpte.redhat.com/resource-claim-namespace' in subject.metadata.annotations
        k8s:
          api_version: gpte.redhat.com/v1
          kind: ResourceClaim
          name: >-
            {{ subject.metadata.annotations['gpte.redhat.com/resource-claim-name'] }}
          namespace: >-
            {{ subject.metadata.annotations['gpte.redhat.com/resource-claim-namespace'] }}
          merge_type: merge
          definition:
            spec:
              template:
                spec:
                  desiredState: stopped
    - event: complete
      tasks:
      - name: Set state stopped in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: stopped
          status:
            state: stopped

  - name: start
    request:
      parameters:
        ACTION: start
    eventHandlers:
    - event: started
      tasks:
      - name: Set state starting in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: starting
          status:
            state: starting
    - event: complete
      tasks:
      - name: Set state started in subject status
        anarchy_subject_update:
          metadata:
            labels:
              state: started
          status:
            state: started
      - name: Schedule stop
        anarchy_schedule_action:
          action: stop
          after: 8h

  - name: destroy
    request:
      parameters:
        ACTION: destroy
    eventHandlers:
    - event: complete
      tasks:
      - name: Set state destroyed in subject status
        anarchy_subject_update:
          status:
            state: destroyed
      - name: Delete resource handle
        when: >-
          'gpte.redhat.com/resource-handle-name' in subject.metadata.annotations and
          'gpte.redhat.com/resource-handle-namespace' in subject.metadata.annotations
        k8s:
          api_version: gpte.redhat.com/v1
          kind: ResourceHandle
          name: >-
            {{ subject.metadata.annotations['gpte.redhat.com/resource-handle-name'] }}
          namespace: >-
            {{ subject.metadata.annotations['gpte.redhat.com/resource-handle-namespace'] }}
          state: absent
      - name: Delete resource claim
        when: >-
          'gpte.redhat.com/resource-claim-name' in subject.metadata.annotations and
          'gpte.redhat.com/resource-claim-namespace' in subject.metadata.annotations
        k8s:
          api_version: gpte.redhat.com/v1
          kind: ResourceClaim
          name: >-
            {{ subject.metadata.annotations['gpte.redhat.com/resource-claim-name'] }}
          namespace: >-
            {{ subject.metadata.annotations['gpte.redhat.com/resource-claim-namespace'] }}
          state: absent
{% endraw %}
