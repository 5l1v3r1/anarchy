---
apiVersion: gpte.redhat.com/v1
kind: AnarchyGovernor
metadata:
  name: {{ anarchy_governor_name }}
  namespace: {{ anarchy_operator_namespace | to_json }}
{% raw %}
spec:
  parameters:
    cloud_provider: ec2
    aws_access_key_id:
      secretName: test-aws-creds
      secretKey: aws_access_key_id
    aws_secret_access_key:
      secretName: test-aws-creds
      secretKey: aws_secret_access_key
  deleteFinalizerCondition:
    check: status.state
    value: destroyed
  subjectEventHandlers:
  - event: add
    handlers:
    - handlerType: scheduleAction
      scheduleActionParams:
        action: deploy
  - event: delete
    handlers:
    - handlerType: scheduleAction
      scheduleActionParams:
        action: destroy
  actions:
  - name: deploy
    request:
      api: test
      callbackTokenParameter: anarchy_callback_token
      callbackUrlParameter: anarchy_callback_url
      data: '{{ { "extra_vars": parameters } | to_json }}'
      method: POST
      path: /api/v2/job_templates/deploy/launch/
    callbackEventNameParameter: event
    eventHandlers:
    - event: started
      handlers:
      - handlerType: email
        emailParams:
          to: ["{{ subject.spec.requester.email }}"]
          from: noreply@opentlc.com
          subject: >-
            {{ governor.metadata.name }} {{ subject.metadata.name }}
            deployment has started
          body: |-
            ... jinja template ...
    - event: complete
      handlers:
      - handlerType: setLabels
        setLabelsParams:
          setLabels:
          - name: state
            value: deployed
      - handlerType: setStatus
        setStatusParams:
          setStatus:
          - name: state
            value: deployed
      - handlerType: scheduleAction
        scheduleActionParams:
          action: destroy
          after: 6d
      - handlerType: email
        emailParams:
          to: ["{{ subject.spec.requester.email }}"]
          from: noreply@opentlc.com
          subject: >-
            {{ governor.metadata.name }} {{ subject.metadata.name }}
            deployed
          body: |-
            ... jinja template ...
    - event: error
      handlers:
      - handlerType: email
        emailParams:
          to: ["{{ subject.spec.requester.email }}"]
          from: noreply@opentlc.com
          subject: >-
            {{ governor.metadata.name }} {{ subject.metadata.name }}
            deploy error
          body: |-
            ... jinja template ...
  - name: destroy
    request:
      api: test
      callbackTokenParameter: anarchy_callback_token
      callbackUrlParameter: anarchy_callback_url
      data: '{{ { "extra_vars": parameters } | to_json }}'
      method: POST
      path: /api/v2/job_templates/destroy/launch/
    callbackEventNameParameter: event
    eventHandlers:
    - event: complete
      handlers:
      - handlerType: email
        emailParams:
          to: ["{{ subject.spec.requester.email }}"]
          from: noreply@opentlc.com
          subject: >-
            {{ governor.metadata.name }} {{ subject.metadata.name }}
            destroyed
          body: |-
            ... jinja template â€¦
      - handlerType: setLabels
        setLabelsParams:
          setLabels:
          - name: state
            value: deployed
      - handlerType: setStatus
        setStatusParams:
          setStatus:
          - name: state
            value: destroyed
    - event: error
      handlers:
      - handlerType: email
        emailParams:
          to: ["{{ subject.spec.requester.email }}"]
          from: noreply@opentlc.com
          subject: >-
            {{ governor.metadata.name }} {{ subject.metadata.name }}
            destroy error
          body: |-
            ... jinja template ...
#  - name: suspend
#    api:
#      url: https://...
#    ...
#  - name: resume
#    api:
#      url: https://...
#    eventHandlers:
#    - event: complete
#      handlers:
#      - handlerType: scheduleAction
#        scheduleActionParams:
#          action: suspend
#          after: 8h
#    ...
{% endraw %}
