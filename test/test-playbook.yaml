---
- hosts: localhost
  gather_facts: false
  vars:
    oc_cmd: oc
    anarchy_operator_namespace: anarchy-operator
    anarchy_operator_test_namespace: anarchy-operator-test
    build: true
    build_anarchy_operator: "{{ build }}"
    build_anarchy_operator_test: "{{ build }}"
    openshift_app_domain: apps.shared.na.openshift.opentlc.com
  tasks:
  - name: Start anarchy-operator build
    command: >-
      {{ oc_cmd }} start-build anarchy-operator
      -n {{ anarchy_operator_namespace | quote }}
      --from-dir {{ playbook_dir }}/..
    when: build_anarchy_operator | bool

  - name: Start anarchy-operator-test-server build
    command: >-
      {{ oc_cmd }} start-build anarchy-operator-test-server
      -n {{ anarchy_operator_test_namespace | quote }}
      --from-dir {{ playbook_dir }}/..
    when: build_anarchy_operator_test | bool

  - when: build_anarchy_operator | bool
    block:
    - name: Get anachry-operator BuildConfig
      k8s_facts:
        api_version: build.openshift.io/v1
        kind: BuildConfig
        name: anarchy-operator
        namespace: "{{ anarchy_operator_namespace }}"
      register: anarchy_operator_buildconfig

    - debug: var=anarchy_operator_buildconfig

    - name: Wait for anarchy-operator build
      k8s_facts:
        api_version: build.openshift.io/v1
        kind: Build
        name: anarchy-operator-{{ anarchy_operator_buildconfig.resources[0].status.lastVersion }}
        namespace: "{{ anarchy_operator_namespace }}"
      register: anarchy_operator_build
      until: anarchy_operator_build.resources[0].status.phase in ['Complete', 'Failed']
      retries: 30
      delay: 10

    - debug: var=anarchy_operator_build

  - when: build_anarchy_operator_test | bool
    block:
    - name: Wait for anachry-operator-test-server build
      k8s_facts:
        api_version: build.openshift.io/v1
        kind: BuildConfig
        name: anarchy-operator-test-server
        namespace: "{{ anarchy_operator_test_namespace }}"
      register: anarchy_operator_test_buildconfig

    - debug: var=anarchy_operator_test_buildconfig

    - name: Wait for anarchy-operator-test-server build

      k8s_facts:
        api_version: build.openshift.io/v1
        kind: Build
        name: anarchy-operator-test-server-{{ anarchy_operator_test_buildconfig.resources[0].status.lastVersion }}
        namespace: "{{ anarchy_operator_test_namespace }}"
      register: anarchy_operator_test_build
      until: anarchy_operator_test_build.resources[0].status.phase in ['Complete', 'Failed']
      retries: 30
      delay: 10

    - debug: var=anarchy_operator_test_build

    - name: Scale down anarchy-operator-test-server
      k8s_scale:
        api_version: extensions/v1beta1
        kind: Deployment
        name: anarchy-operator-test-server
        namespace: "{{ anarchy_operator_test_namespace }}"
        replicas: 0

    - name: Pause for scale-down
      pause:
        seconds: 5

    - name: Scale up anarchy-operator-test-server
      k8s_scale:
        api_version: extensions/v1beta1
        kind: Deployment
        name: anarchy-operator-test-server
        namespace: "{{ anarchy_operator_test_namespace }}"
        replicas: 1
        wait_timeout: 60

  - name: Scale down anarchy-operator
    k8s_scale:
      api_version: extensions/v1beta1
      kind: Deployment
      name: anarchy-operator
      namespace: "{{ anarchy_operator_namespace }}"
      replicas: 0

  - name: Wait for anarchy-operator scale down
    k8s_facts:
      api_version: v1
      kind: Pod
      namespace: "{{ anarchy_operator_namespace }}"
      label_selectors:
      - name=anarchy-operator
    register: get_anarchy_operator_pod
    until: get_anarchy_operator_pod.resources | length == 0
    retries: 30
    delay: 5

  - name: Get test subjects
    k8s_facts:
      api_version: gpte.redhat.com/v1
      kind: AnarchySubject
      namespace: "{{ anarchy_operator_namespace }}"
      label_selectors:
      - governor=test
    register: anarchy_subjects

  - name: Remove finalizer from test anarchy subjects
    command: >-
      {{ oc_cmd }} patch anarchysubject.gpte.redhat.com {{ anarchy_subject.metadata.name }}
      --type=merge -p {{ patch | to_json | quote}}
    loop: "{{ anarchy_subjects.resources }}"
    loop_control:
      label: "{{ anarchy_subject.metadata.name }}"
      loop_var: anarchy_subject
    vars:
      patch:
        metadata:
          finalizers: []

  - name: Remove test subjects
    command: >-
      {{ oc_cmd }} delete anarchysubject -l governor=test
      -n {{ anarchy_operator_namespace | quote }}

  - name: Remove test AnarchyGovernor
    k8s:
      state: absent
      api_version: gpte.redhat.com/v1
      kind: AnarchyGovernor
      name: test
      namespace: "{{ anarchy_operator_namespace }}"

  - name: Remove test-new AnarchyGovernor
    k8s:
      state: absent
      api_version: gpte.redhat.com/v1
      kind: AnarchyGovernor
      name: test-new
      namespace: "{{ anarchy_operator_namespace }}"

  - name: Remove test AnarchyAPI
    k8s:
      state: absent
      api_version: gpte.redhat.com/v1
      kind: AnarchyAPI
      name: test
      namespace: "{{ anarchy_operator_namespace }}"

  - name: Create test AnarchyAPI
    k8s:
      state: present
      definition: "{{ lookup('template', 'test-api.yaml.j2') | from_yaml }}"

  - name: Create test AnarchyGovernor
    k8s:
      state: present
      definition: "{{ lookup('template', 'test-governor.yaml.j2') | from_yaml }}"
    vars:
      anarchy_governor_name: test

  - name: Scale up anarchy-operator
    k8s_scale:
      api_version: extensions/v1beta1
      kind: Deployment
      name: anarchy-operator
      namespace: "{{ anarchy_operator_namespace }}"
      replicas: 1
      wait_timeout: 60

  - name: Pause for anarchy-operator start-up
    pause:
      seconds: 35

  - name: Create AnarchySubject test-1
    k8s:
      state: present
      definition:
        apiVersion: gpte.redhat.com/v1
        kind: AnarchySubject
        metadata:
          name: test-1
          namespace: "{{ anarchy_operator_namespace }}"
          labels:
            governor: test
        spec:
          governor: test
          parameters:
            name: test-1
          requester:
            name: someone-example.com
            email: someone@example.com

  - name: Pause for deploy start
    pause:
      seconds: 10

  - name: Get test-1 deploy action
    k8s_facts:
      api_version: gpte.redhat.com/v1
      kind: AnarchyAction
      label_selectors:
      - gpte.redhat.com/action=deploy
      - gpte.redhat.com/anarchy-subject=test-1
    register: test_1_deploy

  - debug: var=test_1_deploy

  - name: Assert that exactly one deploy action for test-1 was found
    assert:
      that:
      - test_1_deploy.resources | length == 1
      fail_msg: One test-1 deploy action not found
      success_msg: One test-1 deploy action found

  - name: Check test-1 deploy action
    assert:
      that:
      - action.spec.action == 'deploy'
      - action.status.events | length == 1
      - action.status.events[0].name == 'started'
      fail_msg: test-1 deploy not started
      success_msg: test-1 deploy not found started
    vars:
      action: "{{ test_1_deploy.resources[0] }}"

  - name: Pause for deploy completion
    pause:
      seconds: 12

  - name: Get test-1 deploy action
    k8s_facts:
      api_version: gpte.redhat.com/v1
      kind: AnarchyAction
      namespace: "{{ anarchy_operator_namespace }}"
      label_selectors:
      - gpte.redhat.com/action=deploy
      - gpte.redhat.com/anarchy-subject=test-1
    register: test_1_deploy

  - name: Assert that exactly one deploy action for test-1 was found
    assert:
      that:
      - test_1_deploy.resources | length == 1
      fail_msg: One test-1 deploy action not found
      success_msg: One test-1 deploy action found

  - name: Check test-1 deploy action
    assert:
      that:
      - action.spec.action == 'deploy'
      - action.status.events | length == 2
      - action.status.events[1].name == 'complete'
      fail_msg: test-1 deploy not complete
      success_msg: test-1 deploy complete
    vars:
      action: "{{ test_1_deploy.resources[0] }}"

  - name: Get test-1 subject
    k8s_facts:
      api_version: gpte.redhat.com/v1
      kind: AnarchySubject
      namespace: "{{ anarchy_operator_namespace }}"
      name: test-1
    register: test_1_subject

  - name: Check test-1 subject
    assert:
      that:
      - subject.metadata.labels.state == 'deployed'
      - subject.status.state == 'deployed'
      fail_msg: test-1 subject not defined as expected
      success_msg: test-1 subject defined as expected
    vars:
      subject: "{{ test_1_subject.resources[0] }}"

  - name: Delete test-1 subject
    k8s:
      state: absent
      api_version: gpte.redhat.com/v1
      kind: AnarchySubject
      name: test-1
      namespace: "{{ anarchy_operator_namespace }}"

  - name: Pause for delete completion
    pause:
      seconds: 10

  - name: Get test-1 subject
    k8s_facts:
      api_version: gpte.redhat.com/v1
      kind: AnarchySubject
      namespace: "{{ anarchy_operator_namespace }}"
      name: test-1
    register: test_1_subject

  - name: Check test-1 subject deletion
    assert:
      that:
      - test_1_subject.resources|length == 0
      fail_msg: test-1 subject not deleted
      success_msg: test-1 subject delete completed
